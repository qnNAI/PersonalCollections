@using Application.Models.Collection;
@using Markdig;
@model CollectionDto

@{
    ViewData["Title"] = "Collection";
    var mdPipeline = new MarkdownPipelineBuilder()
        .UseAdvancedExtensions()
        .UseBootstrap()
        .UseCitations()
        .UseAbbreviations()
        .UseDefinitionLists()
        .UseEmojiAndSmiley()
        .UseFigures()
        .UseFooters()
        .Build();
}

<h3 class="mb-5 mt-5">@Model.Name</h3>

@if(!string.IsNullOrEmpty(Model.ImageUrl)) {
    <div class="collection-img-container">
        <img src="@Model.ImageUrl" class="collection-img border border-primary" />
    </div>
}

<div class="mb-2 row">
    <label asp-for="Theme" class="col-2 col-lg-1 col-form-label">Theme</label>
    <div class="col-5">
        <input type="text" readonly class="form-control-plaintext" value="@Model.Theme.Name">
    </div>
</div>

<div class="mb-2 row">
    <label asp-for="Author" class="col-2 col-lg-1 col-form-label">Author</label>
    <div class="col-5">
        <input type="text" readonly class="form-control-plaintext" value="@Model.Author.UserName">
    </div>
</div>

<div class="mb-3">
    <label asp-for="Description" class="col-12 col-form-label">Description</label>
    <div class="col-5 alert alert-secondary">
        @Html.Raw(Markdown.ToHtml(@Model.Description, mdPipeline))
    </div>
</div>

<div class="mb-5 mt-5 table-responsive">
    <table class="table table-hover table-striped" id="itemsTable">
        <thead class="table-dark">
            <tr>
                <th>Name</th>
                @foreach(var field in Model.Fields) {
                    <th>@field.Name</th>
                }
                <th></th>
            </tr>
        </thead>
        <tbody class="table-group-divider" id="tBody">
        </tbody>
    </table>

    <div class="d-flex flex-row justify-content-center w-100 mb-5">
        <div class="spinner-border text-success" role="status" id="loader">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <nav>
        <ul class="pagination">
            <li class="page-item" id="prevBtn">
                <a class="page-link" onclick="loadPrevPage('@Url.Action("Items")')" href="#">Previous</a>
            </li>
            <li class="page-item">
                <a class="page-link">
                    <span id="currentPage"></span> / <span id="totalPages"></span>
                </a>
            </li>
            <li class="page-item" id="nextBtn">
                <a class="page-link" onclick="loadNextPage('@Url.Action("Items")')" href="#">Next</a>
            </li>
        </ul>
    </nav>
</div>