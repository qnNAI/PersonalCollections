@using Application.Models.Item;
@model SearchItemsResponse

@{
    ViewData["Title"] = "Search results";
}

@if(!string.IsNullOrEmpty(Model.Term)) 
{
    <h4 class="mt-5">Search results for: "@(Model.Term)"</h4>
}

<input type="hidden" id="term-hidden" value="@Model.Term" />

<ul id="myTab" class="nav nav-tabs mt-5">
    <li class="nav-item">
        <a class="nav-link active" data-bs-toggle="tab" aria-current="page" href="#items-pane">Items</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" data-bs-toggle="tab" href="#collections-pane">Collections</a>
    </li>
</ul>

<div class="tab-content mt-4">
    <div class="tab-pane active" id="items-pane" role="tabpanel" area-labelledby="items-pane">
        <partial name="_SearchItemsResultPartial" model="Model.Items"/>
    </div>

    <div class="tab-pane fade" id="collections-pane" role="tabpanel" area-labelledby="collections-pane">
        <partial name="_SearchCollectionsResultPartial" model="Model.Collections" />
    </div>
</div>

<div class="d-flex flex-row justify-content-center w-100 mt-5">
    <div class="spinner-border text-success" role="status" id="loader">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>



<script>

    document.addEventListener('DOMContentLoaded', function () {
        $('#loader').hide();
        addSearchItemsInfiniteScroll();
    }, false);
</script>

