@using Application.Models.Item;
@model ItemDto;

@{
    ViewData["Title"] = "Edit item";
    var fieldCounter = 0;
}

<h3 class="mt-5">Edit item</h3>

<div class="mt-5 row mb-5">
    <div class="col-lg-4 col-md-6">
        <form asp-action="EditItem" id="edit-item-form">
            <div asp-validation-summary="ModelOnly" class="validation text-danger"></div>
            <div class="form-group mb-3">
                <label asp-for="Name" class="form-label">Name</label>
                <input asp-for="Name" class="form-control" type="text" value="@Model.Name"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <input asp-for="Id" type="hidden" value="@Model.Id"/>
            <input asp-for="CollectionId" value="@Model.CollectionId" type="hidden" />
            @foreach(var field in Model.Fields)
            {
                <div class="form-group mb-3">
                    <label asp-for="Fields[fieldCounter].Value" class="form-label">@field.CollectionField.Name</label>
                    @switch(field.CollectionField.FieldType.Name)
                    {
                        case "DATETIME":
                            <input asp-for="Fields[fieldCounter].Value" type="datetime-local" class="form-control" value="@field.Value" />
                            break;
                        case "INTEGER":
                            <input asp-for="Fields[fieldCounter].Value" type="number" oninput="this.value = Math.round(this.value);" class="form-control" value="@field.Value">
                            break;
                        case "STRING":
                            <input asp-for="Fields[fieldCounter].Value" class="form-control" type="text" value="@field.Value" />
                            break;
                        case "TEXT":
                            <textarea asp-for="Fields[fieldCounter].Value" class="form-control" rows="5" value="@field.Value"></textarea>
                            break;
                        case "BOOLEAN":
                            <input asp-for="Fields[fieldCounter].Value" type="checkbox" class="ms-2" />
                            break;
                    }
                    <span asp-validation-for="Fields[fieldCounter].Value" class="text-danger"></span>
                    <input asp-for="Fields[fieldCounter].ItemId" type="hidden" value="@field.ItemId" />
                    <input asp-for="Fields[fieldCounter].CollectionFieldId" type="hidden" value="@field.CollectionField.Id" />
                    @{
                        fieldCounter++;
                    }
                </div>
            }
            <div class="form-group mb-3">
                <label asp-for="Tags" class="form-label w-100">Tags</label>
                <input type="text" id="tags-input" data-role="tagsinput" value="@string.Join(',', Model.Tags.Select(x => x.Name))"/>
                <span asp-validation-for="Tags" class="text-danger"></span>
            </div>

            <div class="mt-4 form-group">
                <input type="submit" value="Save" class="btn btn-primary" onclick="setTags('edit-item-form');" />
            </div>
        </form>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        $('#tags-input').tagsinput({
            tagClass: 'badge text-bg-success',
        });
        $('.bootstrap-tagsinput > input').autocomplete({
            source: '/Item/TagAutocomplete',
            delay: 200
        });
        $('.ui-widget').addClass('list-group');


    }, false);

</script>

@section Scripts {
    <script src="~/lib/bootstrap-tagsinput/js/bootstrap-tagsinput.js"></script>
    <partial name="_ValidationScriptsPartial" />

}